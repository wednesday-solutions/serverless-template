Resources:
  TodoSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties:
      DBSubnetGroupDescription: Group of private subnets for Aurora cluster.
      SubnetIds:
        - ${env:SUBNET_ID}
  TodoDBSecurityGroup:
    Metadata:
      "aws:copilot:description": "A security group for your workload to access the DB cluster"
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: The Security Group for the database cluster.
      VpcId: ${env:VPC_ID}
      SecurityGroupIngress:
        - ToPort: 3306
          FromPort: 3306
          IpProtocol: tcp
          SourceSecurityGroupId: ${env:SECURITY_GROUP_ID}
  TodoDBRDSCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      MasterUsername:
        Fn::Join:  [
          "",
          [
            "{{resolve:secretsmanager:",
            Fn::Ref: TodoClusterAuroraSecret,
            ":SecretString:username}}",
          ],
        ]
      MasterUserPassword:
        Fn::Join: [
          "",
          [
            "{{resolve:secretsmanager:",
            Fn::Ref: TodoClusterAuroraSecret,
            ":SecretString:password}}",
          ],
        ]
      DBSubnetGroupName:
        Ref: TodoDBSubnetGroup
      Engine: "aurora-mysql"
      EngineVersion: "5.7.mysql_aurora.2.07.1"
      EngineMode: serverless
      DatabaseName: todo_${env:STAGE}
      DBClusterParameterGroupName:
        Ref: TodoDBRDSClusterParameter
      ScalingConfiguration:
        AutoPause: true
        MinCapacity: 1
        MaxCapacity: 8
        SecondsUntilAutoPause: "1000"
  TodoDBRDSClusterParameter:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Parameter group for the Serverless Aurora RDS DB.
      Family: "aurora-mysql5.7"
      Parameters:
        character_set_database: "utf8"
  TodoDBRDSParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: Parameter group for the Serverless Aurora RDS DB.
      Family: "aurora-mysql5.7"
      Parameters:
        sql_mode: IGNORE_SPACE
        max_connections: 100
        wait_timeout: 900
        interactive_timeout: 900
  TodoClusterAuroraSecret:
    Metadata:
      "aws:copilot:description": "A Secrets Manager secret to store your DB credentials"
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Sub: Aurora main user secret for staging
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        GenerateStringKey: "password"
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16
  TodoClusterSecretAuroraClusterAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: 
        Fn::Ref: TodoClusterAuroraSecret
      TargetId: 
        Fn::Ref: TodoDBRDSCluster
      TargetType: AWS::RDS::DBCluster
Outputs:
  TodoRDSHost:
    Description: Host of the Todo RDS instance
    Value:
      Fn::GetAtt: [TodoDBRDSCluster, Endpoint.Address]
  TodoRDSPort:
    Description: Port of the Todo RDS instance
    Value:
      Fn::GetAtt: [TodoDBRDSCluster, Endpoint.Port]
  TodoClusterSecret:
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: 
      Fn::Ref: TodoClusterAuroraSecret